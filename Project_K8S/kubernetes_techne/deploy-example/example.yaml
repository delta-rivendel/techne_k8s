---
apiVersion: v1
kind: Namespace
metadata:
  name: echoserver
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: echoserver
  namespace: echoserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: echoserver
    spec:
      containers:
      - image: gcr.io/google_containers/echoserver:1.4
        imagePullPolicy: Always
        name: echoserver
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
  namespace: echoserver
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: echoserver
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: echoserver
  namespace: echoserver
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0642203334c1dcd17,subnet-95cc0dcc
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:784862261167:certificate/5980cae6-71c6-4d92-a3a8-37397ca7cb5c
    ### As subnets tem que ter as tags:
    # kubernetes.io/cluster/k8s.techne.com.br = shared
    # kubernetes.io/role/alb-ingress = 1
    ### Documentação das annotations do ingress ALB:
    # https://github.com/HotelsDotCom/alb-ingress-controller/blob/master/docs/ingress-resources.md
spec:
  rules:
    - host: teste.k8s.techne.com.br
      http:
        paths:
          - path: /
            backend:
              serviceName: echoserver
              servicePort: 80